import React, { useState, useEffect, useRef } from "react";
import Head from "next/head";
import Link from "next/link";
import Lottie from "react-lottie";
import locationAnimation from "../pages/lotties/telephone.json";
import scriptAnimation from "../pages/lotties/script.json";
import messageAnimation from "../pages/lotties/message.json";

import Salesiq from "../pages/salesiq";

const submitContact = async (event) => {
  event.preventDefault();
  fetch("https://syncrow.kodagu.today/api/incommingrequests", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      data: {
        fullname: event.target.name.value,
        phone_number: event.target.phone.value,
        email_address: event.target.email.value,
        company_name: event.target.company.value,
        message: event.target.message.value,
        type: "quote_request",
      },
    }),
  }).then((data) => {
    console.log(data.status);
    if (data.status === 200) {
      confirm("Your message has been sent successfully!");
      window.location.href = "/";
    } else {
      confirm("Your message has not been sent successfully!");
      window.location.href = "/";
    }
  });
};

function Header({ color }) {
  const [show, setShow] = useState(false);
  const [showIOT, setShowIOT] = useState(false);
  const [active, setActive] = useState("");
  const [activeIOT, setActiveIOT] = useState("");
  const [showCol, setShowCol] = useState(false);
  const [menu, setMenu] = useState(false);
  const [showAutomate, setShowAutomate] = useState(false);
  const [showIOTMenu, setShowIOTMenu] = useState(false);
  const [scroll, setScroll] = useState(10);

  const locationOptions = {
    loop: true,
    autoplay: true,
    animationData: locationAnimation,
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };
  const messageOptions = {
    loop: true,
    autoplay: true,
    animationData: messageAnimation,
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };
  const scriptOptions = {
    loop: true,
    autoplay: true,
    animationData: scriptAnimation,
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };

  let menuRef = useRef();
  let automateMenuRef = useRef();
  let iotMenuRef = useRef();

  useEffect(() => {

    let handler = (e) => {
      if (!menuRef.current.contains(e.target)) {
        setMenu(false);
      }
    }
    document.addEventListener("mousedown", handler);

    return () => {
      document.removeEventListener("mousedown", handler);
    }
  })
  useEffect(() => {

    let handler = (e) => {
      if (!automateMenuRef.current.contains(e.target)) {
        setShow(false);
      }
    }
    document.addEventListener("mousedown", handler);

    return () => {
      document.removeEventListener("mousedown", handler);
    }
  })

  useEffect(() => {

    let handler = (e) => {
      if (!iotMenuRef.current.contains(e.target)) {
        setShowIOT(false);
      }
    }
    document.addEventListener("mousedown", handler);

    return () => {
      document.removeEventListener("mousedown", handler);
    }
  })


  useEffect(() => {
    document.addEventListener("scroll", () => {
      const scrollCheck = window.scrollY < 10;
      if (scrollCheck !== scroll) {
        setScroll(scrollCheck);
      }
    });
  }, [scroll]);


  return (
    <div>
      <Head>
        <title>Syncrow</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://ik.imagekit.io/jason7531/syncrow/common/Group_1_rkAObjd65.png?ik-sdk-version=javascript-1.4.3&updatedAt=1642343317149"
        />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossOrigin="anonymous" referrerpolicy="no-referrer" />
      </Head>

      {/* navbar */}

      <div className={`cursor-pointer mediumLarge:flex fixed top-0 py-6 medium:px-20  px-10 right-0 left-0 z-10 justify-between items-center hidden ${scroll ? '' : 'bg-white text-black shadow-lg z-40 transition ease-in-out duration-500'}`}>
        <Link href="/">
          <div className="cursor-pointer">
            {scroll && color === "white" ?
              <img
                src="https://ik.imagekit.io/jason7531/syncrow/common/Group_3_vfnoGgNCF.png?ik-sdk-version=javascript-1.4.3&updatedAt=1642484105062"
                alt=""
              />
              :
              <img src="/black-logo.png" alt="" />
            }
          </div>
        </Link>

        <div className="flex medium:gap-14 gap-8 relative mt-2 ">
          <Link href="">
            <div ref={automateMenuRef}>
              <span
                className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide relative cursor-pointer`}
                onClick={(e) => { e.preventDefault(); setShow(!show) }}

              >
                Automate
                <i className="fa-solid fa-angle-down pl-4"></i>
              </span>

              {/* automate dropdown */}
              {show ? (
                <div className="bg-white w-44 grid grid-cols-1 grid-rows-2 text-base absolute -left-[3.8rem] top-[21px] py-1 px-2
                                  pt-10 rounded-lg space-y-1 pb-[10px]">
                  <Link href="/home">
                    <a
                      onMouseOver={() => {
                        setActive(1);
                      }}
                      onMouseOut={() => {
                        setActive("");
                      }}
                      className={`${active === 1 ? "bg-black/30" : ""
                        } flex justify-end text-black`}
                    >
                      Home / Villa
                    </a>
                  </Link>
                  <Link href="/workspace">
                    <a
                      onMouseOver={() => {
                        setActive(3);
                      }}
                      onMouseOut={() => {
                        setActive("");
                      }}
                      className={`${active === 3 ? "bg-black/30" : ""
                        } flex justify-end text-black`}
                    >
                      Workspace
                    </a>
                  </Link>
                </div>
              ) : (
                ""
              )}
            </div>
          </Link>

          {/* automate dropdown */}

          <Link href="/about">
            <span className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide cursor-pointer`}>About</span>
          </Link>
          <Link href="/contact">
            <span className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide cursor-pointer`}>Contact Us</span>
          </Link>
          <Link href="/efficiency">
            <span className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide cursor-pointer`}>
              Efficiency
            </span>
          </Link>

          <Link href="/iot">
            <div ref={iotMenuRef} className="relative">
              <span
                className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide relative cursor-pointer`}
              >
                IOT Solutions
                <i onClick={(e) => { e.preventDefault(); setShowIOT(!showIOT) }} className="fa-solid fa-angle-down pl-4"></i>
              </span>

              {/* automate dropdown */}
              {showIOT ? (
                <div className="bg-white w-40 grid grid-cols-1 grid-rows-3 text-base absolute right-0 py-1 px-2
                                  pt-10 rounded-lg space-y-1 pb-[10px]">
                  <Link href="/apartment">
                    <a
                      onMouseOver={() => {
                        setActiveIOT(1);
                      }}
                      onMouseOut={() => {
                        setActiveIOT("");
                      }}
                      className={`${activeIOT === 1 ? "bg-black/30" : ""
                        } flex justify-end text-black`}
                    >
                      Residential
                    </a>
                  </Link>
                  <Link href="/iot/smartCity">
                    <a
                      onMouseOver={() => {
                        setActive(2);
                      }}
                      onMouseOut={() => {
                        setActive("");
                      }}
                      className={`${active === 2 ? "bg-black/30" : ""
                        } flex justify-end text-black`}
                    >
                      Smart Cities
                    </a>
                  </Link>
                  <Link href="/iot/industry">
                    <a
                      onMouseOver={() => {
                        setActiveIOT(3);
                      }}
                      onMouseOut={() => {
                        setActiveIOT("");
                      }}
                      className={`${activeIOT === 3 ? "bg-black/30" : ""
                        } flex justify-end text-black`}
                    >
                      Industrials
                    </a>
                  </Link>
                </div>
              ) : (
                ""
              )}
            </div>
          </Link>
          <Link href="/bundles">
            <span className={`${scroll && color == "white" ? 'text-white' : 'text-black'} text-base tracking-wide cursor-pointer`}>Bundles</span>
          </Link>
          <Link href="/build">
            <span className="text-white text-base tracking-wide bg-default pt-3 -pb-10 h-12 px-8 rounded-lg -mt-3 uppercase cursor-pointer">
              Build your own
            </span>
          </Link>
        </div>
      </div>

      {/* mobile navbar */}

      <div ref={menuRef} className="mediumLarge:hidden flex flex-col items-center z-30 w-full fixed">
        <div className="flex justify-between bg-black w-full py-6 px-10">
          <Link href="/">
            <div>
              <img
                src="https://ik.imagekit.io/jason7531/syncrow/common/Group_3_vfnoGgNCF.png?ik-sdk-version=javascript-1.4.3&updatedAt=1642484105062"
                alt=""
              />
            </div>
          </Link>
          <div
            className="mediumLarge:hidden block mt-2"
            onClick={() => setMenu(!menu)}
          >
            <img src="/group-3.png" width="30px" height="30px" alt="" />
          </div>
        </div>
        {menu ? (
          <div className="bg-white w-full flex flex-col items-center justify-center">

            <div className="mt-8 mb-4">
              <span className="pt-8 pb-4 font-bold text-black uppercase tracking-widest relative">
                Automate
                <img className="w-6 h-6 absolute left-28 top-8" onClick={() => setShowAutomate(!showAutomate)} src="https://ik.imagekit.io/jason7531/syncrow/common/dropdown-menu-icon-12_0WkYqOl6S.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1642271510369" alt="" />
              </span>
              {
                showAutomate ?
                  (
                    <div className="flex flex-col -ml-20">
                      <Link href="/home">
                        <a
                          onMouseOver={() => {
                            setActive(1);
                          }}
                          onMouseOut={() => {
                            setActive("");
                          }}
                          className={`${active === 1 ? "bg-black/30" : ""
                            } flex justify-end text-black font-normal`}
                        >
                          Home / Villa
                        </a>
                      </Link>

                      <Link href="/workspace">
                        <a
                          onMouseOver={() => {
                            setActive(3);
                          }}
                          onMouseOut={() => {
                            setActive("");
                          }}
                          className={`${active === 3 ? "bg-black/30" : ""
                            } flex justify-end text-black  font-normal`}
                        >
                          Workspace
                        </a>
                      </Link>
                    </div>
                  )
                  :
                  ""
              }
            </div>


            <Link href="/about">
              <span className="pb-4 font-bold text-black uppercase tracking-widest">
                About
              </span>
            </Link>
            <Link href="/contact">
              <span className="pb-4 font-bold text-black uppercase tracking-widest">
                Contact Us
              </span>
            </Link>
            <Link href="/efficiency">
              <span className="pb-4 font-bold text-black uppercase tracking-widest">
                Efficiency
              </span>
            </Link>

            <div className="mt-0 mb-4">
              <Link href="/iot">
                <span className="cursor-pointer pt-8 pb-4 font-bold text-black uppercase tracking-widest relative">
                  IOT Solutions
                  <img className="w-6 h-6 absolute -right-9 top-8" onClick={(e) => { e.preventDefault(); setShowIOTMenu(!showIOTMenu) }} src="https://ik.imagekit.io/jason7531/syncrow/common/dropdown-menu-icon-12_0WkYqOl6S.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1642271510369" alt="" />
                </span>
              </Link>
              {
                showIOTMenu ?
                  (
                    <div className="flex flex-col -ml-20 ">
                      <Link href="/apartment">
                        <a
                          onMouseOver={() => {
                            setActive(1);
                          }}
                          onMouseOut={() => {
                            setActive("");
                          }}
                          className={`${active === 1 ? "bg-black/30" : ""
                            } flex justify-end text-black font-normal`}
                        >
                          Residential
                        </a>
                      </Link>
                      <Link href="/iot/smartCity">
                        <a
                          onMouseOver={() => {
                            setActive(2);
                          }}
                          onMouseOut={() => {
                            setActive("");
                          }}
                          className={`${active === 2 ? "bg-black/30" : ""
                            } flex justify-end text-black font-normal`}
                        >
                          Smart Cities
                        </a>
                      </Link>
                      <Link href="/iot/industry">
                        <a
                          onMouseOver={() => {
                            setActive(3);
                          }}
                          onMouseOut={() => {
                            setActive("");
                          }}
                          className={`${active === 3 ? "bg-black/30" : ""
                            } flex justify-end text-black  font-normal`}
                        >
                          Industrials
                        </a>
                      </Link>
                    </div>
                  )
                  :
                  ""
              }
            </div>
            <Link href="/bundles">
              <span className="pb-4 font-bold text-black uppercase tracking-widest">
                Bundles
              </span>
            </Link>
            <Link href="/build">
              <span className="pb-8 font-bold text-black uppercase tracking-widest">
                Build our own
              </span>
            </Link>
          </div>
        ) : (
          ""
        )}
      </div>

      {/* mobile navbar */}

      {/* animations */}

      <div className="">
        <Link href='/contact'>
          <button
            className='fixed hidden lg:block right-0 top-1/2 z-10 rounded-l-lg shadow-2xl p-2'
            style={{ background: '#023DFE', color: 'white' }}
          >
            <Lottie options={locationOptions} height={'7vh'} className="z-10 middle:w-28 w-32" />
          </button>
        </Link>

        <button
          className='fixed hidden lg:block right-0 top-2/3 z-10 rounded-l-lg shadow-2xl p-2'
          onClick={() => setShowCol(true)}
          style={{ background: '#023DFE', color: 'white' }}
        >
          <Lottie options={scriptOptions} className="z-10 middle:w-28 w-32" height={'7vh'} />
        </button>


          <Salesiq widgetCode={"924d1a7ecfe5063997c9fce9404034ad98cbe6c9b7fc1827ef8dfaa440675621"} domain={"https://salesiq.zoho.com/widget"} />

        {showCol ? (
          <div className="w-1/3 absolute top-36 right-0 desktop:h-104 laptop:h-100 rounded-l-3xl bg-default text-white z-30">
            <button
              className="absolute top-8 right-10"
              onClick={() => setShowCol(false)}
            >
              <img
                src="https://cdn-icons-png.flaticon.com/512/66/66847.png"
                alt=""
                className=" desktop:w-5 laptop:w-4"
              />
            </button>

            <span className="font-bold desktop:text-2xl laptop:text-xl absolute desktop:top-8 laptop:top-6 left-10">
              Request a Quote
            </span>
            <form
              onSubmit={submitContact}
              className="desktop:text-xl laptop:text-base absolute desktop:top-16 laptop:top-12 left-10"
            >
              <br />
              <span>
                FullName <span className="text-red-500">*</span>
              </span>
              <br />
              <input
                type="text"
                id="name"
                name="name"
                className="desktop:h-10 laptop:h-7 rounded-md w-full text-black"
              />
              <br />
              <br />
              <span>
                Phone Number <span className="text-red-500">*</span>
              </span>
              &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
              &nbsp;
              <span>
                Email Address <span className="text-red-500">*</span>
              </span>
              <br />
              <input
                type="number"
                name="phone"
                id="phone"
                className="rounded-md desktop:h-10 laptop:h-7 text-black"
              />
              &nbsp; &nbsp;
              <input
                type="text"
                name="email"
                id="email"
                className="rounded-md desktop:h-10 laptop:h-7 text-black"
              />
              <br />
              <br />
              <span>Company Name (optional)</span>
              <br />
              <input
                type="text"
                name="company"
                id="company"
                className="rounded-md desktop:h-10 laptop:h-7 w-full text-black"
              />
              <br />
              <br />
              <span>
                Message <span className="text-red-500">*</span>
              </span>
              <br />
              <input
                type="text"
                name="message"
                id="message"
                placeholder="Your Message here..."
                className="w-full desktop:h-20 laptop:h-16 rounded-md pl-2 text-black"
              />
              <br />
              <span className="text-base">
                <span className="text-red-500">*</span> Fields required
              </span>
              <br />
              <br />
              <button
                className="bg-white text-default desktop:w-48 laptop:w-36 desktop:h-10 laptop:h-7 rounded-lg"
                type="submit"
              >
                Contact us now!
              </button>
            </form>
          </div>
        ) : (
          ""
        )}
      </div>
    </div>
  );
}

export default Header;