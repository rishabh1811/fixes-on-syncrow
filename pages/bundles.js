import Head from 'next/head';
import Header from '../components/header';
import Footer from '../components/footer';
import { useState } from "react"

export async function getStaticProps() {
    const res = await fetch(
        "https://syncrow.kodagu.today/api/bundle-items?pagination[pageSize]=50"
    );
    const response = await res.json();
    var data = response.data;
    var bundle_items_general = [];
    var bundle_items_convience = [];
    var bundle_items_safety = [];
    var bundle_items_accessibility = [];
    for (let i = 0; i < data.length; i++) {
        if (data[i].attributes.type === "global") {
            bundle_items_general.push(data[i]);
        } else if (data[i].attributes.type === "convenience") {
            bundle_items_convience.push(data[i]);
        } else if (data[i].attributes.type === "safety") {
            bundle_items_safety.push(data[i]);
        } else if (data[i].attributes.type === "accessibility") {
            bundle_items_accessibility.push(data[i]);
        }
    }
    return {
        props: {
            bundle_items_general,
            bundle_items_convience,
            bundle_items_safety,
            bundle_items_accessibility,
        },
    };
}

const Bundel = ({ bundle_items_general,
    bundle_items_convience,
    bundle_items_safety,
    bundle_items_accessibility, }) => {
    const [activeSection, setActiveSection] = useState(0);
    const [homeType, setHomeType] = useState("")
    const [serviceType, setServiceType] = useState("")
    var [new_general, setNew_general] = useState([]);
    var [new_convience, setNew_convience] = useState([]);
    var [new_safety, setNew_safety] = useState([]);
    var [new_accessibility, setNew_accessibility] = useState([]);
    const guthen = 'Guthen Bloots Personal Use';
    async function fetchBundlle(serviceType, new_general, new_convience, new_safety, new_accessibility) {
        var res = await fetch(`https://syncrow.kodagu.today/api/bundles?populate[0]=bundle_type&populate[1]=bundled_item_list.bundle_item&filters[bundle_type][name][$eq]=${serviceType}`);

        const response = await res.json();
        new_general = response.data[0].attributes.bundled_item_list.filter(item => item.bundle_item.data.attributes.type === "global").map(item => item.bundle_item.data);
        new_convience = response.data[0].attributes.bundled_item_list.filter(item => item.bundle_item.data.attributes.type === "convenience").map(item => item.bundle_item.data);
        new_safety = response.data[0].attributes.bundled_item_list.filter(item => item.bundle_item.data.attributes.type === "safety").map(item => item.bundle_item.data);
        new_accessibility = response.data[0].attributes.bundled_item_list.filter(item => item.bundle_item.data.attributes.type === "accessibility").map(item => item.bundle_item.data);
        setNew_general(new_general);
        setNew_convience(new_convience);
        setNew_safety(new_safety);
        setNew_accessibility(new_accessibility);
    }
    function tickCheck(lis, id) {
        for (let i = 0; i < lis.length; i++) {
            if (lis[i].id === id) {
                return true;
            }
        }
    }
    return (
        <div>
            <Head>
                <title>Syncrow</title>
                <meta name='description' content='Generated by create next app' />
                <link
                    rel='icon'
                    href='https://ik.imagekit.io/jason7531/syncrow/common/Group_1_rkAObjd65.png?ik-sdk-version=javascript-1.4.3&updatedAt=1642343317149'
                />
                <style>
                    @import
                    url(https://fonts.cdnfonts.com/css/guthen-bloots-personal-use);
                </style>
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css" integrity="sha512-10/jx2EXwxxWqCLX/hHth/vu2KY3jCF70dCQB8TSgNjbCVAC/8vai53GfMDrO2Emgwccf2pJqxct9ehpzG+MTw==" crossOrigin="anonymous" referrerpolicy="no-referrer" />
            </Head>
            <Header />
            {/* section 1 */}
            <div className={`min-h-[100vh] px-[5vw] pt-[20vh] ${(activeSection >= 0 && activeSection < 1) ? "block" : "hidden"}`}>
                <div className='flex flex-col justify-center items-center lg:items-start'>
                    <p style={{ fontFamily: `${guthen}` }} className="text-blue-700 text-[4rem]">Bundles</p>
                    <p className='-mt-[1.5rem] text-[1.2rem] font-[aftika-bold]'>Select Type</p>
                </div>
                <div className={`w-[100%] lg:h-[4rem] mt-[2rem] ${activeSection === 0 ? "" : "hidden"}`}>
                    <div className='flex flex-col lg:flex-row'>
                        <div onClick={() => setHomeType("1 BHK")} className={`my-[.5rem] lg:my-0 rounded-2xl cursor-pointer font-[aftika-bold] text-[1.3rem] w-[100%] h-[4rem] flex flex-row justify-center items-center relative border-2 border-blue-700 ${homeType === "1 BHK" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${homeType === "1 BHK" ? "bg-white" : "bg-blue-700"}`}></div>
                            1 BHK
                        </div>
                        <div onClick={() => setHomeType("2 BHK")} className={`my-[.5rem] lg:my-0 rounded-2xl lg:mx-[2rem] cursor-pointer font-[aftika-bold] text-[1.3rem] w-[100%] h-[4rem] flex flex-row justify-center items-center relative border-2 border-blue-700 ${homeType === "2 BHK" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${homeType === "2 BHK" ? "bg-white" : "bg-blue-700"}`}></div>
                            2 BHK
                        </div>
                        <div onClick={() => setHomeType("3 BHK")} className={`my-[.5rem] lg:my-0 rounded-2xl cursor-pointer font-[aftika-bold] text-[1.3rem] w-[100%] h-[4rem] flex flex-row justify-center items-center relative border-2 border-blue-700 ${homeType === "3 BHK" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${homeType === "3 BHK" ? "bg-white" : "bg-blue-700"}`}></div>
                            3 BHK
                        </div>

                    </div>

                </div>
                <div className='flex flex-col-reverse lg:flex-col'>
                    <div className={`mt-[1.5rem] lg:flex flex-col lg:flex-row ${activeSection === 0.5 ? "" : "hidden"}`}>
                        <div onClick={() => setServiceType("Convieniece")} className={`my-[.5rem] lg:my-0 cursor-pointer flex flex-row justify-center items-center border-2 border-blue-700 h-[10rem] w-[100%] rounded-2xl relative ${serviceType === "Convieniece" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${serviceType === "Convieniece" ? "bg-white" : "bg-blue-700"} `}></div>
                            <p style={{ fontFamily: `${guthen}` }} className="text-[2.2rem]">Convieniece</p>
                        </div>
                        <div onClick={() => setServiceType("Safety")} className={`my-[.5rem] lg:my-0 cursor-pointer flex lg:mx-[2rem] flex-row justify-center items-center border-2 border-blue-700 h-[10rem] w-[100%] rounded-2xl relative ${serviceType === "Safety" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${serviceType === "Safety" ? "bg-white" : "bg-blue-700"} `}></div>
                            <p style={{ fontFamily: `${guthen}` }} className="text-[2.2rem]">Safety</p>
                        </div>
                        <div onClick={() => setServiceType("Accessibility")} className={`my-[.5rem] lg:my-0 cursor-pointer flex flex-row justify-center items-center border-2 border-blue-700 h-[10rem] w-[100%] rounded-2xl relative ${serviceType === "Accessibility" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${serviceType === "Accessibility" ? "bg-white" : "bg-blue-700"} `}></div>
                            <p style={{ fontFamily: `${guthen}` }} className="text-[2.2rem]">Accessibility</p>
                        </div>

                    </div>
                    <div className={`mt-[1.5rem]  ${activeSection === 0 ? "" : "hidden"}`}>
                        <div onClick={() => setServiceType("Full Smart Home Experience")} className={`rounded-2xl cursor-pointer font-[aftika-bold] text-[1.3rem] w-[100%] h-[10rem] lg:h-[4rem] flex flex-row justify-center items-center relative border-2 border-blue-700 ${serviceType === "Full Smart Home Experience" ? "bg-blue-700 text-white" : "bg-white text-blue-700"}`}>
                            <div className={`absolute hidden lg:block w-[.7rem] h-[.7rem] top-[8px] left-[8px] rounded-[50%] ${serviceType === "Full Smart Home Experience" ? "bg-white" : "bg-blue-700"}`}></div>
                            Full Smart Home Experience
                        </div>
                    </div>

                </div>
                <div className='lg:flex hidden flex-row justify-end mt-[4rem] mb-[3rem] text-white'>
                    <button onClick={async () => { setActiveSection(1); await fetchBundlle(serviceType, new_general, new_convience, new_safety, new_accessibility); }} className='bg-[#808B96] px-[3rem] py-[.5rem] rounded-lg'>NEXT</button>
                </div>
                <div className={`lg:hidden flex flex-row justify-end mt-[4rem] mb-[3rem] text-white ${activeSection === 0 ? "" : "hidden"}`}>
                    <button onClick={async () => { setActiveSection(0.5); }} className='bg-blue-700 px-[3rem] py-[.5rem] rounded-lg'>NEXT</button>
                </div>
                <div className={`w-[100%] flex justify-between ${activeSection === 0.5 ? "" : "hidden"}`}>

                    <div className='lg:hidden flex flex-row justify-end mt-[4rem] mb-[3rem] text-white'>
                        <button onClick={() => setActiveSection(0)} className='bg-[#808b96] px-[3rem] py-[.5rem] rounded-lg'>BACK</button>
                    </div>
                    <div className='lg:hidden flex flex-row justify-end mt-[4rem] mb-[3rem] text-white'>
                        <button onClick={async () => { setActiveSection(1); }} className='bg-blue-700 px-[3rem] py-[.5rem] rounded-lg'>NEXT</button>
                    </div>
                </div>
            </div>

            {/* section 2 */}
            <div className={`min-h-[100vh] mb-[3rem] px-[2rem] lg:px-[12vw] pt-[20vh] ${activeSection === 1 ? "block" : "hidden"}`}>
                <div className='lg:h-[7rem] h-[100%] flex flex-col lg:flex-row lg:items-end lg:justify-end'>
                    <div className='flex flex-col items-center lg:items-end'>
                        <p style={{ fontFamily: `${guthen}` }} className="text-blue-700 text-[4rem]">Bundles</p>
                        <p className='-mt-[1.5rem] text-right text-[1rem] font-[aftika-semibold]'>1BHK, 2BHK, 3BHK {serviceType} Bundle {new_safety.length}</p>
                    </div>
                    <div className='lg:w-[65%] w-[100%] flex rounded-md lg:ml-[5%] border-[1px] border-[#c6c6c6] my-[3rem] lg:my-0 h-[10rem] lg:h-[100%]'>
                        <div className='h-[100%] w-[4rem] rounded-md bg-blue-700'></div>
                        <div className='flex w-[100%] flex-col justify-center items-center'>
                            {
                                bundle_items_general.map((item, index) => {
                                    return (<div className='w-[100%] flex justify-between my-[.5rem] text-blue-700 font-bold px-[1rem]' key={item.id} >
                                        <p className='font-[aftika-extra-light]'>{item.attributes.item_name}</p>
                                        {tickCheck(new_general,item.id)?<img className='h-[1rem] w-[1.4rem]' src='/check-icon.png' alt="..." /> : "" } 
                                    </div>)
                                })
                            }

                        </div>
                    </div>
                </div>
                <div className='flex flex-col lg:flex-row lg:justify-between lg:items-stretch lg:mt-[4rem]'>
                    <div className="lg:w-[30%] w-[100%] mb-[3rem] lg:mb-0 border-[#c6c6c6] border-[1px] flex flex-col justify-between rounded-md">
                        <div>
                            <div className='h-[3rem] flex items-center px-[1rem] w-[100%] bg-blue-700 rounded-md'>
                                <p className='text-white font-extralight font-[aftika-light]'>CONVENIENCE</p>
                            </div>
                            <div>
                                {
                                    bundle_items_convience.map((item, index) => {
                                        return (<div className='w-[100%] flex justify-between my-[.9rem] text-blue-700 font-bold px-[1rem]' key={item.id}>
                                            <p className='font-[aftika-extra-light] w-[80%]'>{item.attributes.item_name}</p>
                                            {tickCheck(new_convience,item.id)?<img className='h-[1rem] w-[1.4rem]' src='/check-icon.png' alt="..." /> : "" } 
                                        </div>)
                                    })
                                }
                            </div>
                        </div>
                        <div className='flex justify-center items-center pt-[1rem] pb-[1rem]'>
                            <button className='py-[.5rem] px-[3rem] bg-blue-700 text-white rounded-md'>CHOOSE</button>
                        </div>
                    </div>

                    <div className="lg:w-[30%] w-[100%] mb-[3rem] lg:mb-0 border-[#c6c6c6] border-[1px] flex flex-col justify-between rounded-md">
                        <div>
                            <div className='h-[3rem] flex items-center px-[1rem] w-[100%] bg-blue-700 rounded-md'>
                                <p className='text-white font-extralight font-[aftika-light]'>SAFETY</p>
                            </div>
                            <div>

                                {
                                    bundle_items_safety.map((item, index) => {
                                        return (<div className='w-[100%] flex justify-between my-[.9rem] text-blue-700 font-bold px-[1rem]' key={item.id}>
                                            <p className='font-[aftika-extra-light] w-[80%]'>{item.attributes.item_name}</p>
                                            {tickCheck(new_safety,item.id)?<img className='h-[1rem] w-[1.4rem]' src='/check-icon.png' alt="..." /> : "" }  
                                        </div>)
                                    })
                                }
                            </div>
                        </div>
                        <div className='flex justify-center items-center pt-[1rem] pb-[1rem]'>
                            <button className='py-[.5rem] px-[3rem] bg-blue-700 text-white rounded-md'>CHOOSE</button>
                        </div>
                    </div>

                    <div className="lg:w-[30%] w-[100%] mb-[3rem] lg:mb-0 border-[#c6c6c6] border-[1px] flex flex-col justify-between rounded-md">
                        <div>
                            <div className='h-[3rem] flex items-center px-[1rem] w-[100%] bg-blue-700 rounded-md'>
                                <p className='text-white font-extralight font-[aftika-light]'>ACCESSIBILITY</p>
                            </div>
                            <div>
                                {
                                    bundle_items_accessibility.map((item, index) => {
                                        return (<div className='w-[100%] flex justify-between my-[.9rem] text-blue-700 font-bold px-[1rem]' key={item.id}>
                                            <p className='font-[aftika-extra-light] w-[80%]'>{item.attributes.item_name}</p>
                                            {tickCheck(new_accessibility,item.id)?<img className='h-[1rem] w-[1.4rem]' src='/check-icon.png' alt="..." /> : "" } 
                                        </div>)
                                    })
                                }
                            </div>
                        </div>
                        <div className='flex justify-center items-center pt-[1rem] pb-[1rem]'>
                            <button className='py-[.5rem] px-[3rem] bg-blue-700 text-white rounded-md'>CHOOSE</button>
                        </div>
                    </div>
                </div>
            </div>

            <Footer />

        </div>
    )
}

export default Bundel;